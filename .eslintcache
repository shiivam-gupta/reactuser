[{"/var/www/html/react/reactuser/src/index.js":"1","/var/www/html/react/reactuser/src/reportWebVitals.js":"2","/var/www/html/react/reactuser/src/App.js":"3","/var/www/html/react/reactuser/src/Layouts/Navbar.js":"4","/var/www/html/react/reactuser/src/Pages/Home.js":"5","/var/www/html/react/reactuser/src/Pages/Aboutus.js":"6","/var/www/html/react/reactuser/src/Pages/Notfound.js":"7","/var/www/html/react/reactuser/src/Pages/Contactus.js":"8","/var/www/html/react/reactuser/src/Pages/Users/List.js":"9","/var/www/html/react/reactuser/src/Pages/Users/EditUser.js":"10","/var/www/html/react/reactuser/src/Pages/Users/AddUser.js":"11","/var/www/html/react/reactuser/src/Pages/Users/ViewUser.js":"12","/var/www/html/react/reactuser/src/Pages/Auth/Logout.js":"13","/var/www/html/react/reactuser/src/Pages/Auth/Login.js":"14","/var/www/html/react/reactuser/src/Pages/Auth/Signup.js":"15","/var/www/html/react/reactuser/src/Pages/Products/Product.js":"16","/var/www/html/react/reactuser/src/Routes/PrivateRoute.js":"17","/var/www/html/react/reactuser/src/Layouts/Pagination.js":"18"},{"size":500,"mtime":1617633128015,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1617633128015,"results":"21","hashOfConfig":"20"},{"size":2211,"mtime":1617790308569,"results":"22","hashOfConfig":"20"},{"size":2538,"mtime":1617633128011,"results":"23","hashOfConfig":"20"},{"size":2009,"mtime":1617633128015,"results":"24","hashOfConfig":"20"},{"size":8336,"mtime":1617633128015,"results":"25","hashOfConfig":"20"},{"size":241,"mtime":1617633128015,"results":"26","hashOfConfig":"20"},{"size":7682,"mtime":1617633128015,"results":"27","hashOfConfig":"20"},{"size":4922,"mtime":1617633128015,"results":"28","hashOfConfig":"20"},{"size":2654,"mtime":1617633128015,"results":"29","hashOfConfig":"20"},{"size":2385,"mtime":1617633128015,"results":"30","hashOfConfig":"20"},{"size":1436,"mtime":1617633128015,"results":"31","hashOfConfig":"20"},{"size":254,"mtime":1617633128015,"results":"32","hashOfConfig":"20"},{"size":4317,"mtime":1617782143993,"results":"33","hashOfConfig":"20"},{"size":14352,"mtime":1617634099829,"results":"34","hashOfConfig":"20"},{"size":12302,"mtime":1617633128015,"results":"35","hashOfConfig":"20"},{"size":577,"mtime":1617790443960,"results":"36","hashOfConfig":"20"},{"size":3190,"mtime":1617633128011,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"uiplho",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"40"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"40"},"/var/www/html/react/reactuser/src/index.js",[],["86","87"],"/var/www/html/react/reactuser/src/reportWebVitals.js",[],"/var/www/html/react/reactuser/src/App.js",["88","89","90"],"/var/www/html/react/reactuser/src/Layouts/Navbar.js",["91","92","93"],"import { React,Fragment,useState } from \"react\";\nimport { Link,NavLink } from \"react-router-dom\";\n\nconst Navbar = (data) => {\n  //const {token} = data\n  //console.log('token==='+token);\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\n  const LoggedInMenu = () => {\n    return (<Fragment>\n              <li className=\"nav-item\">\n                <NavLink className=\"nav-link\" exact aria-current=\"page\" to=\"/\">Home</NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink className=\"nav-link\" exact aria-current=\"page\" to=\"/users\">Users</NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink className=\"nav-link\" exact aria-current=\"page\" to=\"/product-list\">Products</NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink className=\"nav-link\" exact to=\"/about-us\">About Us</NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink className=\"nav-link\" exact to=\"/contact-us\">Contact Us</NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink className=\"nav-link\" exact to=\"/log-out\">Log Out</NavLink>\n              </li>\n            </Fragment>)\n  }\n\n  const NotLoggedInMenu = () => {\n    return (<Fragment>\n              <li className=\"nav-item\">\n                <NavLink className=\"nav-link\" exact to=\"/login\">Login</NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink className=\"nav-link\" exact to=\"/sign-up\">Sign Up</NavLink>\n              </li>\n            </Fragment>)\n  }\n\n  const Menu = () => {\n    if(token){\n      return(<LoggedInMenu/>)\n    } else {\n      return(<NotLoggedInMenu/>)\n    }\n\n  }\n  \n  return(\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n      <div className=\"container\">\n        <div className=\"container-fluid\">\n          <a className=\"navbar-brand\" href=\"#\">React</a>\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n              <Menu/>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nexport default Navbar;","/var/www/html/react/reactuser/src/Pages/Home.js",[],"/var/www/html/react/reactuser/src/Pages/Aboutus.js",["94","95"],"import { React,useState } from \"react\";\nimport Pagination from \"../Layouts/Pagination\";\n\nconst Aboutus = () => {\n\n    const[pageLimit, setPageLimit] = useState(4)\n\n    const[paging,setPaging] = useState({\n        start : 0,\n        end: pageLimit\n    })\n\n    const navigatePage = (start,end) =>{\n        setPaging({start : start,end : end})\n        // console.log(\"start:\"+ start)\n        // console.log(\"end:\"+ end) \n    }\n\n    const [posts,setPost] = useState([\n        {\n            \"userId\": 1,\n            \"id\": 1,\n            \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n            \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\n          },\n          {\n            \"userId\": 1,\n            \"id\": 2,\n            \"title\": \"qui est esse\",\n            \"body\": \"est rerum tempore vitae\\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\\nqui aperiam non debitis possimus qui neque nisi nulla\"\n          },\n          {\n            \"userId\": 1,\n            \"id\": 3,\n            \"title\": \"ea molestias quasi exercitationem repellat qui ipsa sit aut\",\n            \"body\": \"et iusto sed quo iure\\nvoluptatem occaecati omnis eligendi aut ad\\nvoluptatem doloribus vel accusantium quis pariatur\\nmolestiae porro eius odio et labore et velit aut\"\n          },\n          {\n            \"userId\": 1,\n            \"id\": 4,\n            \"title\": \"eum et est occaecati\",\n            \"body\": \"ullam et saepe reiciendis voluptatem adipisci\\nsit amet autem assumenda provident rerum culpa\\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\\nquis sunt voluptatem rerum illo velit\"\n          },\n          {\n            \"userId\": 1,\n            \"id\": 5,\n            \"title\": \"nesciunt quas odio\",\n            \"body\": \"repudiandae veniam quaerat sunt sed\\nalias aut fugiat sit autem sed est\\nvoluptatem omnis possimus esse voluptatibus quis\\nest aut tenetur dolor neque\"\n          },\n          {\n            \"userId\": 1,\n            \"id\": 6,\n            \"title\": \"dolorem eum magni eos aperiam quia\",\n            \"body\": \"ut aspernatur corporis harum nihil quis provident sequi\\nmollitia nobis aliquid molestiae\\nperspiciatis et ea nemo ab reprehenderit accusantium quas\\nvoluptate dolores velit et doloremque molestiae\"\n          },\n          {\n            \"userId\": 1,\n            \"id\": 7,\n            \"title\": \"magnam facilis autem\",\n            \"body\": \"dolore placeat quibusdam ea quo vitae\\nmagni quis enim qui quis quo nemo aut saepe\\nquidem repellat excepturi ut quia\\nsunt ut sequi eos ea sed quas\"\n          },\n          {\n            \"userId\": 1,\n            \"id\": 8,\n            \"title\": \"dolorem dolore est ipsam\",\n            \"body\": \"dignissimos aperiam dolorem qui eum\\nfacilis quibusdam animi sint suscipit qui sint possimus cum\\nquaerat magni maiores excepturi\\nipsam ut commodi dolor voluptatum modi aut vitae\"\n          },\n          {\n            \"userId\": 1,\n            \"id\": 9,\n            \"title\": \"nesciunt iure omnis dolorem tempora et accusantium\",\n            \"body\": \"consectetur animi nesciunt iure dolore\\nenim quia ad\\nveniam autem ut quam aut nobis\\net est aut quod aut provident voluptas autem voluptas\"\n          },\n          {\n            \"userId\": 1,\n            \"id\": 10,\n            \"title\": \"optio molestias id quia eum\",\n            \"body\": \"quo et expedita modi cum officia vel magni\\ndoloribus qui repudiandae\\nvero nisi sit\\nquos veniam quod sed accusamus veritatis error\"\n          },\n          {\n            \"userId\": 2,\n            \"id\": 11,\n            \"title\": \"et ea vero quia laudantium autem\",\n            \"body\": \"delectus reiciendis molestiae occaecati non minima eveniet qui voluptatibus\\naccusamus in eum beatae sit\\nvel qui neque voluptates ut commodi qui incidunt\\nut animi commodi\"\n          },\n          {\n            \"userId\": 2,\n            \"id\": 12,\n            \"title\": \"in quibusdam tempore odit est dolorem\",\n            \"body\": \"itaque id aut magnam\\npraesentium quia et ea odit et ea voluptas et\\nsapiente quia nihil amet occaecati quia id voluptatem\\nincidunt ea est distinctio odio\"\n          },\n          {\n            \"userId\": 2,\n            \"id\": 13,\n            \"title\": \"dolorum ut in voluptas mollitia et saepe quo animi\",\n            \"body\": \"aut dicta possimus sint mollitia voluptas commodi quo doloremque\\niste corrupti reiciendis voluptatem eius rerum\\nsit cumque quod eligendi laborum minima\\nperferendis recusandae assumenda consectetur porro architecto ipsum ipsam\"\n          },\n          {\n            \"userId\": 2,\n            \"id\": 14,\n            \"title\": \"voluptatem eligendi optio\",\n            \"body\": \"fuga et accusamus dolorum perferendis illo voluptas\\nnon doloremque neque facere\\nad qui dolorum molestiae beatae\\nsed aut voluptas totam sit illum\"\n          },\n          {\n            \"userId\": 2,\n            \"id\": 15,\n            \"title\": \"eveniet quod temporibus\",\n            \"body\": \"reprehenderit quos placeat\\nvelit minima officia dolores impedit repudiandae molestiae nam\\nvoluptas recusandae quis delectus\\nofficiis harum fugiat vitae\"\n          },\n          {\n            \"userId\": 2,\n            \"id\": 16,\n            \"title\": \"sint suscipit perspiciatis velit dolorum rerum ipsa laboriosam odio\",\n            \"body\": \"suscipit nam nisi quo aperiam aut\\nasperiores eos fugit maiores voluptatibus quia\\nvoluptatem quis ullam qui in alias quia est\\nconsequatur magni mollitia accusamus ea nisi voluptate dicta\"\n          },\n          {\n            \"userId\": 2,\n            \"id\": 17,\n            \"title\": \"fugit voluptas sed molestias voluptatem provident\",\n            \"body\": \"eos voluptas et aut odit natus earum\\naspernatur fuga molestiae ullam\\ndeserunt ratione qui eos\\nqui nihil ratione nemo velit ut aut id quo\"\n          },\n          {\n            \"userId\": 2,\n            \"id\": 18,\n            \"title\": \"voluptate et itaque vero tempora molestiae\",\n            \"body\": \"eveniet quo quis\\nlaborum totam consequatur non dolor\\nut et est repudiandae\\nest voluptatem vel debitis et magnam\"\n          },\n          {\n            \"userId\": 2,\n            \"id\": 19,\n            \"title\": \"adipisci placeat illum aut reiciendis qui\",\n            \"body\": \"illum quis cupiditate provident sit magnam\\nea sed aut omnis\\nveniam maiores ullam consequatur atque\\nadipisci quo iste expedita sit quos voluptas\"\n          },\n          {\n            \"userId\": 2,\n            \"id\": 20,\n            \"title\": \"doloribus ad provident suscipit at\",\n            \"body\": \"qui consequuntur ducimus possimus quisquam amet similique\\nsuscipit porro ipsam amet\\neos veritatis officiis exercitationem vel fugit aut necessitatibus totam\\nomnis rerum consequatur expedita quidem cumque explicabo\"\n          },\n          {\n            \"userId\": 3,\n            \"id\": 21,\n            \"title\": \"asperiores ea ipsam voluptatibus modi minima quia sint\",\n            \"body\": \"repellat aliquid praesentium dolorem quo\\nsed totam minus non itaque\\nnihil labore molestiae sunt dolor eveniet hic recusandae veniam\\ntempora et tenetur expedita sunt\"\n          }\n\n    ]);\n    return(\n        <div className=\"container\"> \n            <h1>About Us</h1>\n            \n            <div className=\"row\">\n                {\n                    posts.slice(paging.start,paging.end).map((post,index) => (\n                        <div className=\"col-md-3 py-2\" key={post.id}>\n                            <div className=\"card\">\n                                <div className=\"card-body mb-2\">\n                                    <h5>\n                                        #{post.id} {post.title}\n                                        \n                                    </h5>\n                                    <p>\n                                        {post.body}\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                    ))\n                }\n                \n            </div>\n            <Pagination pageLimit={pageLimit} totalPost = {posts.length} navigatePage={navigatePage}/>\n        </div>\n    )\n}\n\nexport default Aboutus;","/var/www/html/react/reactuser/src/Pages/Notfound.js",[],"/var/www/html/react/reactuser/src/Pages/Contactus.js",["96","97","98","99","100","101","102","103"],"import { React,useEffect,useState } from \"react\";\nimport { useHistory,Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport classNames  from \"classnames\";\nimport FlashMessage  from \"react-flash-message\";\n\nconst Contactus = () => {\n\n    const [contact,setContact] = useState({\n        name : \"\",\n        email : \"\",\n        subject : \"\",\n        message : \"\",\n        showMessage: false,\n        type : \"\"\n\n    });\n\n    const { register,handleSubmit,errors} = useForm({\n        mode:\"onTouched\"\n    });\n\n    const {name,email,subject,message,type} = contact;\n    const history = useHistory([]);\n\n    const formSubmit = async (data) => {\n        console.log(data)\n        document.getElementById(\"create-course-form\").reset();\n\n        //e.preventDefault();\n         const result =  await axios.post('http://localhost:3002/contact',data);\n         setContact({ \n            name : \"\",\n            email : \"\",\n            subject : \"\",\n            message : \"\",\n            showMessage: false,\n            type:\"\" \n        });\n         setContact({ showMessage: true, type:\"success\" });\n         history.push(\"/contact-us\");\n    }\n\n    const closeMessage = (e) => {\n        setContact({ showMessage: false, type:\"\" });\n    }\n\n    return (\n        <div className=\"container\">\n            <section className=\"mb-4\">\n            <h2 className=\"h1-responsive font-weight-bold text-center my-4\">Contact us</h2>\n            <p className=\"text-center w-responsive mx-auto mb-5\">Do you have any questions? Please do not hesitate to contact us directly. Our team will come back to you within\n                a matter of hours to help you.</p>\n\n            <div className=\"row\">\n                <div className=\"col-md-9 mb-md-0 mb-5\">\n                    <form  onSubmit={ handleSubmit((e) =>formSubmit(e))} id=\"create-course-form\" >     \n                        { contact.showMessage &&  \n                            <FlashMessage duration={5000}>\n                                <div className={`alert alert-${type}`}>\n                                    <span className=\"close\"><strong onClick={ e => closeMessage(e)}>X</strong></span>\n                                    <p>Your message has been sent successfully.</p>\n                                </div>\n                            </FlashMessage>\n                        }\n                        <div className=\"row\">\n                            <div className=\"col-md-6\">\n                                <div className=\"md-form mb-0\">\n                                    <label htmlFor=\"name\" className=\"\">Your Name</label>\n                                    <input type=\"text\" id=\"name\" name=\"name\" className={classNames('form-control',{'is-invalid' : errors.name})} ref={register({\n                                        required:\"Please enter Name.\",\n                                        minLength:{\n                                            value:4,\n                                            message:\"Name field must be atleast of 4 characters.\"\n                                        }\n                                    })} defaultValue = {name}/>\n                                    { errors.name && (<div className=\"text-danger\">{errors.name.message}</div>)}\n                                    \n                                </div>\n                            </div>\n                            <div className=\"col-md-6\">\n                                <div className=\"md-form mb-0\">\n                                    <label htmlFor=\"email\" className=\"\">Your email</label>\n                                    <input type=\"text\" id=\"email\" name=\"email\" className={classNames('form-control',{'is-invalid' : errors.email})} ref={register({\n                                        required:\"Please enter Email.\",\n                                        pattern:{\n                                            value:/^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                                            message:\"Please enter a valid Email format.\"\n                                        }\n                                    })} defaultValue = {email}/>\n                                    { errors.email && (<div className=\"text-danger\">{errors.email.message}</div>)}\n                                    \n                                </div>\n                            </div>\n\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"md-form mb-0\">\n                                    <label htmlFor=\"subject\" className=\"\">Subject</label>\n                                    <input type=\"text\" id=\"subject\" name=\"subject\" className={classNames('form-control',{'is-invalid' : errors.subject})} ref={register({\n                                        required:\"Please enter Subject.\",\n                                        minLength:{\n                                            value:4,\n                                            message:\"Subject field must be atleast of 4 characters.\"\n                                        }\n                                    })} defaultValue = {subject}/>\n                                    { errors.subject && (<div className=\"text-danger\">{errors.subject.message}</div>)}\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"row\">\n\n                            <div className=\"col-md-12\">\n\n                                <div className=\"md-form\">\n                                    <label htmlFor=\"message\">Your message</label>\n                                    <textarea type=\"text\" id=\"message\" name=\"message\" rows=\"2\" className={classNames('form-control md-textarea',{'is-invalid' : errors.message})} ref={register({\n                                        required:\"Please enter Message.\",\n                                        minLength:{\n                                            value:10,\n                                            message:\"Message field must be atleast of 10 characters.\"\n                                        }\n                                    })}></textarea>\n                                    { errors.message && (<div className=\"text-danger\">{errors.message.message}</div>)}\n                                </div>\n\n                            </div>\n                        </div>\n                        <div className=\"text-center text-md-left pt-3\">\n                            <button type=\"submit\" className=\"btn btn-primary\">Send</button>\n                        </div>\n                    </form>\n\n                    \n                    <div className=\"status\"></div>\n                </div>\n                <div className=\"col-md-3 text-center\">\n                    <ul className=\"list-unstyled mb-0\">\n                        <li><i className=\"fas fa-map-marker-alt fa-2x\"></i>\n                            <p>San Francisco, CA 94126, USA</p>\n                        </li>\n\n                        <li><i className=\"fas fa-phone mt-4 fa-2x\"></i>\n                            <p>+ 01 234 567 89</p>\n                        </li>\n\n                        <li><i className=\"fas fa-envelope mt-4 fa-2x\"></i>\n                            <p>contact@mdbootstrap.com</p>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n\n        </section>\n        </div>\n    )\n}\n\nexport default Contactus;","/var/www/html/react/reactuser/src/Pages/Users/List.js",["104","105","106","107"],"import {React , useEffect, useState}  from \"react\";\nimport  axios  from \"axios\";\nimport { useHistory,Link } from \"react-router-dom\";\nimport Pagination from \"../../Layouts/Pagination\";\n\nconst List = () => {\n\n    const [User,setUser] = useState([]);\n    const [showNumber,setShowNumber] = useState(false);\n    const history = useHistory([]);\n\n    useEffect(()=>{ \n        loadUsers();\n    },[]);\n\n    const loadPagination = (pageLimit,totalNumber,navigatePage) => {\n        console.log(\"first===\"+totalNumber);\n        //setTimeout(function(){ \n            return (\n                <Pagination pageLimit={pageLimit} totalPost = {totalNumber} navigatePage={navigatePage}/>\n            ) \n         //}, 1000)\n        \n    }\n\n    const loadUsers = async (action = \"\") => {\n        const result = await axios.get('http://localhost:3002/user'); \n        setUser(result.data.reverse());\n        \n        if(action == \"delete\"){\n            setShowNumber(true)\n\n            console.log('seconnd=='+parseInt(User.length));\n            console.log('seconnddd=='+parseInt(result.data.length));\n            console.log('seconnd=='+showNumber);\n        } else {\n            setShowNumber(false)\n        }\n        \n    }\n\n    const searchUser = async(e) => {\n        console.log(e.target.value);\n        let searchWord = e.target.value;\n        if(searchWord.length > 0){\n            const searchResults =  await axios.get('http://localhost:3002/user?q='+searchWord);\n            setUser(searchResults.data.reverse());\n        } else {\n            loadUsers();\n        }\n    }\n\n    const removeUser = async (id) => {\n        await axios.delete(`http://localhost:3002/user/${id}`);\n        const action = \"delete\";\n        history.push(\"/users\");\n        //loadUsers(action);\n    }\n\n    const[pageLimit, setPageLimit] = useState(5)\n\n    const[paging,setPaging] = useState({\n        start : 0,\n        end: pageLimit\n    })\n\n    const navigatePage = (start,end) =>{\n        setPaging({start : start,end : end})\n    }\n\n        // if (!this.state.response){\n        //     return <div>Loading...</div>\n        // }\n    \n    return ( \n        <div className=\"container\">\n            <h2>User List</h2>\n            <div className=\"row\">\n                <div className=\"col-md-3\">\n                    <div className=\"pull-right\">\n                        <Link className = \"btn btn-primary\" exact to=\"/add-user\">Add User</Link>\n                    </div>\n                </div>\n                <div className=\"col-md-3\" >\n                    <div className=\"input-group\">\n                        <div className=\"form-outline\">\n                            <input type=\"search\" id=\"form1\" className=\"form-control\" placeholder=\"Search\" onChange={(e)=> searchUser(e)}/>\n                            {/* <label className=\"form-label\" for=\"form1\">Search</label> */}\n                        </div>\n                        {/* <button type=\"button\" className=\"btn btn-primary\">\n                            <i className=\"fas fa-search\"></i>\n                        </button> */}\n                    </div>\n                </div>\n            </div>\n            <table className=\"table table-hover\">\n                <thead>\n                <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">Name</th>\n                <th scope=\"col\">Email</th>\n                <th scope=\"col\">Phone</th>\n                <th scope=\"col\">Action</th>\n                </tr>\n            </thead>\n            <tbody>\n                {\n                    User.slice(paging.start,paging.end).map((value,index) => (\n                        <tr key={index}>\n                            <th scope=\"row\">{index+1}</th>\n                            <td>{value.name}</td>\n                            <td>{value.email}</td>\n                            <td>{value.phone}</td>\n                            <td>\n                                <Link className = \"btn btn-primary mr-2\" to={`/view-user/${value.id}`}>View</Link>\n                                <Link className = \"btn btn-outline-primary mr-2\" to={`/edit-user/${value.id}`}>Edit</Link>\n                                <Link className = \"btn btn-danger\" onClick={(e) => removeUser(value.id)}>Delete</Link>\n                            </td>\n                        </tr>\n                    ))\n                }\n                {`\"`+User.length+`\"`}\n            </tbody>\n            </table>\n            \n            {\n                showNumber ? loadPagination(pageLimit,parseInt(User.length-1),navigatePage) : (User.length > 0 ?  loadPagination(pageLimit,parseInt(User.length),navigatePage): <div> Loading ... </div> )\n                // showNumber ? loadPagination(pageLimit,parseInt(User.length),navigatePage) : (User.length > 0 ?  loadPagination(pageLimit,parseInt(User.length),navigatePage) : <div> Loading ... </div> )\n            \n            }\n        </div>\n    );\n\n\n    \n}\nexport default List; ","/var/www/html/react/reactuser/src/Pages/Users/EditUser.js",["108","109"],"import axios from \"axios\";\nimport { React,useState,useEffect } from \"react\";\nimport { useHistory,useParams,Link } from \"react-router-dom\";\n\n\nconst EditUser = () => {\n    const [user,setUser] = useState({\n        name : \"\",\n        email : \"\",\n        phone : \"\",\n        website : \"\"\n    });\n    const history = useHistory([]);\n    const {name,email,phone,website} = user;\n    const {id} = useParams([]);\n\n    useEffect(() =>{\n        loadUserData()\n    },[])\n    \n    const onInputChange = (e) => {\n        setUser({...user,[e.target.name] : e.target.value})\n        //console.log(user);\n    }\n\n    const loadUserData = async() => {\n        const result = await axios.get(`http://localhost:3002/user/${id}`);\n        setUser(result.data)\n    }\n\n    const formSubmit = async (e) => {\n        e.preventDefault();\n        const result =  await axios.put(`http://localhost:3002/user/${id}`,user);\n        history.push(\"/users\");\n    }\n\n    return (\n        <div className=\"container\">\n            <h2>Edit User </h2>\n            <form onSubmit = { e => formSubmit(e)}>\n                <div className=\"form-group\">\n                    <label for=\"exampleInputName\">Name</label>\n                    <input type=\"text\" className=\"form-control\" id=\"exampleInputName\" aria-describedby=\"emailHelp\" placeholder=\"Enter name\" name=\"name\" value={name} \n                    onChange={e => onInputChange(e)} /> \n                    \n                </div>\n                <div className=\"form-group\">\n                    <label for=\"exampleInputEmail\">Email</label>\n                    <input type=\"email\" className=\"form-control\" id=\"exampleInputEmail\" placeholder=\"Enter Email\" name=\"email\" value={email} onChange={e => onInputChange(e)}/>\n                </div>\n                <div className=\"form-group\">\n                    <label for=\"exampleInputPhone\">Phone</label>\n                    <input type=\"text\" className=\"form-control\" id=\"exampleInputPhone\" placeholder=\"Enter Phoone\" name=\"phone\" value={phone} onChange={e => onInputChange(e)}/>\n                </div>\n                <div className=\"form-group\">\n                    <label for=\"exampleInputWebsite\">Website</label>\n                    <input type=\"text\" className=\"form-control\" id=\"exampleInputWebsite\" placeholder=\"Enter Website\" name=\"website\" value={website} onChange={e => onInputChange(e)}/>\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary mr-2\">Update</button>\n                \n                <Link className = \"btn btn-primary\" exact to=\"/users\">Back</Link>\n                \n                </form>\n        </div>\n    );\n}\nexport default EditUser;","/var/www/html/react/reactuser/src/Pages/Users/AddUser.js",["110"],"import axios from \"axios\";\nimport { React,useState } from \"react\";\nimport { useHistory,Link } from \"react-router-dom\";\n\n\nconst AddUser = () => {\n    const [user,setUser] = useState({\n        name : \"\",\n        email : \"\",\n        phone : \"\",\n        website : \"\"\n    });\n\n    const {name,email,phone,website} = user;\n    const onInputChange = (e) => {\n        setUser({...user,[e.target.name] : e.target.value})\n        //console.log(user);\n    }\n\n    const history = useHistory([]);\n\n    const formSubmit = async (e) => {\n        e.preventDefault();\n        const result =  await axios.post('http://localhost:3002/user',user);\n        history.push(\"/users\");\n    }\n\n    return (\n        <div className=\"container\">\n            <h2>Add User </h2>\n            <form onSubmit = { e => formSubmit(e)}>\n                <div className=\"form-group\">\n                    <label for=\"exampleInputName\">Name</label>\n                    <input type=\"text\" className=\"form-control\" id=\"exampleInputName\" aria-describedby=\"emailHelp\" placeholder=\"Enter name\" name=\"name\" value={name} \n                    onChange={e => onInputChange(e)} /> \n                    \n                </div>\n                <div className=\"form-group\">\n                    <label for=\"exampleInputEmail\">Email</label>\n                    <input type=\"email\" className=\"form-control\" id=\"exampleInputEmail\" placeholder=\"Enter Email\" name=\"email\" value={email} onChange={e => onInputChange(e)}/>\n                </div>\n                <div className=\"form-group\">\n                    <label for=\"exampleInputPhone\">Phone</label>\n                    <input type=\"text\" className=\"form-control\" id=\"exampleInputPhone\" placeholder=\"Enter Phoone\" name=\"phone\" value={phone} onChange={e => onInputChange(e)}/>\n                </div>\n                <div className=\"form-group\">\n                    <label for=\"exampleInputWebsite\">Website</label>\n                    <input type=\"text\" className=\"form-control\" id=\"exampleInputWebsite\" placeholder=\"Enter Website\" name=\"website\" value={website} onChange={e => onInputChange(e)}/>\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary mr-2\">Submit</button>\n                \n                <Link className = \"btn btn-primary\" exact to=\"/users\">Back</Link>\n               \n                </form>\n        </div>\n    );\n}\nexport default AddUser;","/var/www/html/react/reactuser/src/Pages/Users/ViewUser.js",["111"],"import axios from \"axios\";\nimport { React,useState,useEffect } from \"react\";\nimport { useParams, Link} from \"react-router-dom\";\n\n\nconst ViewUser = () => {\n    const [user,setUser] = useState({\n        name : \"\",\n        email : \"\",\n        phone : \"\",\n        website : \"\"\n    });\n    const {name,email,phone,website} = user;\n    const {id} = useParams([]);\n\n    useEffect(() =>{\n        loadUserData()\n    },[])\n\n    const loadUserData = async() => {\n        const result = await axios.get(`http://localhost:3002/user/${id}`);\n        setUser(result.data)\n    }\n\n    return (\n        <div className=\"container\">\n            <h2>Edit User </h2>\n            \n            <form>\n                <div className=\"form-group\">\n                    <label for=\"exampleInputName\">Name : {name}</label>\n                </div>\n                <div className=\"form-group\">\n                    <label for=\"exampleInputEmail\">Email : {email}</label>\n                </div>\n                <div className=\"form-group\">\n                    <label for=\"exampleInputPhone\">Phone : {phone}</label>\n                </div>\n                <div className=\"form-group\">\n                    <label for=\"exampleInputWebsite\">Website : {website}</label>\n                </div>\n                \n                <Link className = \"btn btn-primary\" exact to=\"/users\">Back</Link>\n                \n            </form>\n        </div>\n    );\n}\nexport default ViewUser;","/var/www/html/react/reactuser/src/Pages/Auth/Logout.js",[],"/var/www/html/react/reactuser/src/Pages/Auth/Login.js",["112","113","114","115","116","117","118"],"import { React, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Router } from \"react-router\"\nimport { Redirect, useHistory, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport classNames from \"classnames\";\nimport FlashMessage from \"react-flash-message\";\n\nconst Login = () => {\n\n    const [loginCondition, setLoginCondition] = useState({\n        showMessage: false,\n        isLogin: false,\n        type: \"\",\n        message: \"\"\n    });\n    const [user, setUser] = useState({\n        email: \"\",\n        password: \"\"\n    })\n    const history = useHistory([]);\n    const { email, password } = user;\n    const { register, handleSubmit, errors } = useForm({\n        mode: \"onTouched\"\n    })\n\n    const token = localStorage.getItem('token');\n\n    const formSubmit = (data) => {\n\n        setLoginCondition({\n            showMessage: false,\n            type: \"\",\n            message: \"\"\n        });\n\n        const getRegisteredData = axios.get('http://localhost:3002/admin?email=' + data.email).then((getRegisteredData) => {\n            console.log(getRegisteredData.data);\n            if (getRegisteredData.data.length > 0) {\n                if (data.password !== getRegisteredData.data[0].password) {\n                    setLoginCondition({ showMessage: true, type: \"error\", message: \"Invalid Credentials.\" });\n                    return false;\n                }\n            } else {\n                setLoginCondition({ showMessage: true, type: \"error\", message: \"Invalid Credentials.\" });\n                return false;\n            }\n            console.log(data);\n            localStorage.setItem('token', '123456789');\n            Router.push('/');\n\n        });\n    }\n\n    const closeMessage = (e) => {\n        setLoginCondition({ showMessage: false, type: \"\" });\n    }\n\n    return (token ? <Redirect to=\"/\"></Redirect> :\n        <div className=\"container\">\n            <h2>Login </h2>\n            <form onSubmit={handleSubmit(e => formSubmit(e))}>\n                {loginCondition.showMessage &&\n                    <FlashMessage duration={5000}>\n                        <div className={`alert alert-${loginCondition.type}`}>\n                            <span className=\"close\"><strong onClick={e => closeMessage(e)}>X</strong></span>\n                            <p>{loginCondition.message}</p>\n                        </div>\n                    </FlashMessage>\n                }\n                <div className=\"form-group\">\n                    <label htmlFor=\"exampleInputEmail\">Email</label>\n                    <input type=\"text\" className={classNames('form-control', { 'is-invalid': errors.email })} id=\"exampleInputEmail\" aria-describedby=\"emailHelp\" placeholder=\"Enter Email\" name=\"email\" dafaultvalue={email} ref={register({\n                        required: \"Email field is required.\",\n                        pattern: {\n                            value: /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                            message: \"Please enter a valid Email format.\"\n                        }\n                    })} />\n                    {errors.email && (<div className=\"text-danger\">{errors.email.message}</div>)}\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"exampleInputPassword\">Password</label>\n                    <input type=\"password\" className={classNames('form-control', { 'is-invalid': errors.password })} id=\"exampleInputPassword\" placeholder=\"Enter Password\" name=\"password\" dafaultvalue={password} ref={register({\n                        required: \"Password field is required.\",\n                        maxLength: {\n                            value: 30,\n                            message: 'Password field cannnot be more than 30 characters.'\n                        }\n                    })} />\n                    {errors.password && (<div className=\"text-danger\">{errors.password.message}</div>)}\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-primary mr-2\">Submit</button>\n\n                <Link className=\"btn btn-primary\" exact to=\"/sign-up\">Sign Up</Link>\n\n            </form>\n        </div>\n\n    )\n\n}\n\nexport default Login;","/var/www/html/react/reactuser/src/Pages/Auth/Signup.js",["119","120","121","122","123","124","125","126","127","128","129","130","131","132"],"import { React, useEffect, useState } from \"react\";\nimport { useForm,useFieldArray } from \"react-hook-form\";\nimport classNames  from \"classnames\";\nimport FlashMessage  from \"react-flash-message\";\nimport axios from \"axios\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nconst UserInfo = (prop) => {\n\n    const {register,control,errors,getValues,classNames} = prop;\n    const {append,fields,remove} = useFieldArray({\n        name:'client',\n        control\n    });\n    const [state,setState] = useState([]);\n    useEffect(async() => {\n        const getStates =  await axios.get('http://localhost:3002/states');\n        setState(getStates.data)\n    },[])\n\n\n    return(\n        <div className=\"card mb-2\">\n            <div className=\"card-header\">Add Client Information <button type=\"button\" className=\"btn btn-primary ml-5\" onClick={() => append({client_first_nameclient_first_name:'',client_last_name:\"\",client_email:\"\",client_state:\"\"})}>Add Client</button></div>\n            <div className=\"card-body\">\n                {fields.map((item,index) => (\n                    <div className=\"form-row form-group\" key={item.id}>\n                        <div className=\"col\">\n                            <input type=\"text\" className={classNames('form-control',{'is-invalid': (errors.client && errors.client[index] && errors.client[index].client_first_name) })} name={`client[${index}].client_first_name`} placeholder=\"Enter Client First name\" ref={register(\n                                {\n                                    required:'Client First Name field is required.',\n                                    maxLength:{\n                                        value: 30,\n                                        message:'Client First Name field cannnot be more than 30 characters.'\n                                    }\n                                }\n                            )} defaultValue=''/>\n                            {errors.client && errors.client[index] && errors.client[index].client_first_name && (<div className=\"text-danger\">{errors.client[index].client_first_name.message}</div>)}\n                            \n                        </div>\n                        <div className=\"col\">\n                            <input type=\"text\" className={classNames('form-control',{'is-invalid': (errors.client && errors.client[index] && errors.client[index].client_last_name) })} name={`client[${index}].client_last_name`} placeholder=\"Enter Client Last name\" ref={register(\n                                {\n                                    required:'Client Last Name field is required.',\n                                    maxLength:{\n                                        value: 30,\n                                        message:'Client Last Name field cannnot be more than 30 characters.'\n                                    }\n                                }\n                            )} defaultValue=''/>\n                            {errors.client && errors.client[index] && errors.client[index].client_last_name && (<div className=\"text-danger\">{errors.client[index].client_last_name.message}</div>)}\n                        </div>\n                        \n                        <div className=\"col\">\n                            <input type=\"text\" className={classNames('form-control',{'is-invalid': (errors.client && errors.client[index] && errors.client[index].client_email) })} name={`client[${index}].client_email`} placeholder=\"Enter Client E-mail Address\" ref={register(\n                                {\n                                    required:'Client Email field is required.',\n                                    pattern:{\n                                        value:/^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                                        message:\"Please enter a valid Client Email format.\"\n                                    },\n                                    // validate: value => value !== getValues('email') && value !== getValues('email') || 'Email already taken.',\n\n                                }\n                                    \n                            )} defaultValue=''/>\n                            {errors.client && errors.client[index] && errors.client[index].client_email && (<div className=\"text-danger\">{errors.client[index].client_email.message}</div>)}\n                            \n                        </div>\n                        <div className=\"col\">\n                            <select  className={classNames('form-control',{'is-invalid': (errors.client && errors.client[index] && errors.client[index].client_state) })} id=\"state\" name={`client[${index}].client_state`} defaultValue='' ref={register(\n                                {\n                                    required:'Client State field is required.',\n                                    \n                                }\n                            )}>\n                                <option value=\"\">Select Client State</option>\n                                {state.map((value,index)=>(\n                                    <option value={value.name} key={value.id}>{value.name}</option>\n                                ))}\n                            </select>\n                            \n                            {errors.client && errors.client[index] && errors.client[index].client_state && (<div className=\"text-danger\">{errors.client[index].client_state.message}</div>)}\n                            \n                        </div>\n                        <div className=\"col\">\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={() => remove(index)}>Delete</button>\n                        </div>\n                    </div>\n                ))}\n                \n            </div>\n        </div>\n    \n  )\n}\n\nconst Signup = () => {\n    const {register,handleSubmit,errors,getValues,control} = useForm();\n    const history = useHistory([]);\n    const [signup,SetSignup] = useState({\n        first_name : \"\",\n        last_name : \"\",\n        email:\"\",\n        password: \"\",\n        confirm_password: \"\",\n        term_of_use : \"\",\n    })\n\n    const [signUpCondition,setSignUpCondition] = useState({\n        showMessage: false,\n        type:\"\",\n        message:\"\"\n    });\n\n    // console.log(errors);\n    const submitForm = async(data) => {\n        let map = {};\n        let clientEmail = [];\n        let result = false;\n\n        setSignUpCondition({ \n            showMessage: false,\n            type:\"\",\n            message:\"\"\n        });\n\n        if(data.client){\n            for(let i = 0; i < data.client.length; i++) {\n                // check if object contains entry with this element as key\n                if(map[data.client[i].client_email]) {\n                    result = true;\n                    // terminate the loop\n                    break;\n                }\n                // add entry in object with the element as key\n                map[data.client[i].client_email] = true;\n                //clientEmail[i] = data.client[i].client_email;\n                clientEmail.push(data.client[i].client_email)\n            }\n        }\n\n        if(result || (clientEmail.indexOf(data.email) > -1) ){\n            setSignUpCondition({ showMessage: true, type:\"error\",message:\"Duplicate Email found.\" });\n            return false;\n        } else {\n            const getRegisteredData =  await axios.get('http://localhost:3002/admin?email='+data.email);\n            console.log(getRegisteredData.data);\n            if(getRegisteredData.data.length > 0){\n                setSignUpCondition({ showMessage: true, type:\"error\",message:data.email+ \" email already taken.\" });\n                return false;\n            }\n\n            setSignUpCondition({ showMessage: true, type:\"success\",message:\"You have been successfully registered.\" });\n        }\n\n        const response =  await axios.post('http://localhost:3002/admin',data);\n        document.getElementById(\"create-signup-form\").reset();\n        SetSignup({ \n            first_name : \"\",\n            last_name : \"\",\n            email:\"\",\n            password: \"\",\n            confirm_password: \"\",\n            term_of_use : \"\", \n        });\n        history.push(\"/sign-up\");\n    }\n\n    const closeMessage = (e) => {\n        setSignUpCondition({ showMessage: false, type:\"\" });\n    }\n    return (\n        <div className=\"container\">\n            {/* <div className=\"signup-form\"> */}\n            <div className=\"\">\n                <form onSubmit={handleSubmit((e) => { submitForm(e)})} method=\"post\" id=\"create-signup-form\">\n                { signUpCondition.showMessage &&  \n                    <FlashMessage >\n                        <div className={`alert alert-${signUpCondition.type}`}>\n                            <span className=\"close\"><strong onClick={ e => closeMessage(e)}>X</strong></span>\n                            <p>{signUpCondition.message}</p>\n                        </div>\n                    </FlashMessage>\n                }\n                    <h2>Sign Up</h2>\n                    <p>Please fill in this form to create an account!</p>\n                    <hr/>\n                    <div className=\"form-group\">\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <input type=\"text\" className={classNames('form-control',{'is-invalid': errors.first_name })} name=\"first_name\" placeholder=\"First Name\" ref={register({\n                                    required:\"First Name field is required.\",\n                                    maxLength:{\n                                        value: 30,\n                                        message:'First Name field cannnot be more than 30 characters.'\n                                    }\n\n                                })}/>\n                                {errors.first_name && (<div className=\"text-danger\">{errors.first_name.message}</div>)}\n                            </div>\n                            <div className=\"col\">\n                                <input type=\"text\" className={classNames('form-control',{'is-invalid': errors.last_name })} name=\"last_name\" placeholder=\"Last Name\" ref={register({\n                                    required:\"Last Name field is required.\",\n                                    maxLength:{\n                                        value: 30,\n                                        message:'Last Name field cannnot be more than 30 characters.'\n                                    }\n                                })}/>\n                                {errors.last_name && (<div className=\"text-danger\">{errors.last_name.message}</div>)}\n                            </div>\n                        </div>        \t\n                    </div>\n                    <div className=\"form-group\">\n                        <input type=\"email\" className={classNames('form-control',{'is-invalid': errors.email })} name=\"email\" placeholder=\"Email\" ref={register({\n                            required:\"Email field is required.\",\n                            pattern:{\n                                value:/^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                                message:\"Please enter a valid Email format.\"\n                            }\n\n                        })}/>\n                        {errors.email && (<div className=\"text-danger\">{errors.email.message}</div>)}\n                    </div>\n                    <div className=\"form-group\">\n                        <input type=\"password\" className={classNames('form-control',{'is-invalid': errors.password })} name=\"password\" placeholder=\"Password\" ref={register({\n                            required:\"Password field is required.\",\n                            maxLength:{\n                                value: 30,\n                                message:'Password field cannnot be more than 30 characters.'\n                            },\n                            minLength:{\n                                value:4,\n                                message:\"Password field must be atleast of 4 characters.\"\n                            }\n                        })}/>\n                        {errors.password && (<div className=\"text-danger\">{errors.password.message}</div>)}\n                    </div>\n                    <div className=\"form-group\">\n                        <input type=\"password\" className={classNames('form-control',{'is-invalid': errors.confirm_password })} data={getValues('password')} name=\"confirm_password\" placeholder=\"Confirm Password\" ref={register({\n                            required:\"Confirm Password field is required.\",\n                            validate: value => value === getValues('password') || 'Confirm Password does not match with Password field.'\n                        })}/>\n                        {errors.confirm_password && (<div className=\"text-danger\">{errors.confirm_password.message}</div>)}\n                    </div>        \n                    <div className=\"form-group\">\n                        <label className={classNames('form-check-label',{'is-invalid': errors.term_of_use })} >\n                            <input type=\"checkbox\" name=\"term_of_use\" ref={register({\n                            required:\"Term Of Use field is required.\"\n                        })}/> \n                        I accept the <a href=\"#\">Terms of Use</a> &amp; <a href=\"#\">Privacy Policy</a></label>\n                        {errors.term_of_use && (<div className=\"text-danger\">{errors.term_of_use.message}</div>)}\n                    </div>\n                    <UserInfo register={register} control={control} errors={errors} getValues={getValues}classNames={classNames}/>\n                    <div className=\"form-group\">\n                        <button type=\"submit\" className=\"btn btn-primary btn-lg\">Sign Up</button>\n                    </div>\n                    \n                </form>\n                <div className=\"hint-text\">Already have an account? <Link to=\"/login\">Login here</Link></div>\n            </div>\n        </div>\n    );\n}\n\nexport default Signup;","/var/www/html/react/reactuser/src/Pages/Products/Product.js",["133","134","135","136","137","138","139","140"],"import axios from \"axios\";\nimport { React, useEffect, useState } from \"react\";\n\nconst Product =() => {\n\n    const [Product,setProduct] = useState([]);\n    const [Category,setCategory] = useState([]);\n    const [Ingredients,setIngredients] = useState([]);\n    const [filterParam,setFilterParam] = useState([]);\n\n    useEffect(() => {\n        loadProduct('');\n        loadCategory();\n        loadIngredients();\n    },[]);\n\n    const loadProduct = async (category) => {\n        var productList = [];\n        if(category) {\n            console.log(category)\n            if(category.length > 0){\n                //const productList = [];\n                category.map(async (item,index) => {\n                    const product = await axios.get('http://localhost:3002/product?category_like='+item);\n                    productList.push(product);\n                });  \n            }\n        } else {\n            productList = await axios.get('http://localhost:3002/product');\n        }\n\n        \n         console.log(productList);\n         setProduct(productList.data)\n    } \n\n    const loadCategory = async () => {\n        const categoryList = await axios.get('http://localhost:3002/category');\n\n        categoryList.data.forEach(async (item,index)=> {\n            const productCat = await axios.get('http://localhost:3002/product?category_like='+item.title);\n            categoryList.data[index]['productCount'] = productCat.data.length;\n            categoryList.data[index]['checked'] = false;\n            if((index+1) === categoryList.data.length) {\n                CatCallback(categoryList);\n            }\n        })\n    }\n\n    const loadIngredients = async () => {\n        const ingredientsList = await axios.get('http://localhost:3002/ingredients');\n\n        ingredientsList.data.forEach(async (item,index)=> {\n\n            ingredientsList.data[index]['checked'] = false;\n            if((index+1) === ingredientsList.data.length) {\n                IndiCallback(ingredientsList);\n            }\n        }) \n    }\n\n    const CatCallback = (categoryList) => {\n        setCategory(categoryList.data);\n    }\n\n    const IndiCallback = (ingredientsList) => {\n        setIngredients(ingredientsList.data);\n    }\n\n    const selectCategory = (e,id) => {\n        if(e.target.checked){\n            Category.forEach(async (item,index)=> {\n                if(item.id == id){\n                    Category[index]['checked'] = true\n                }\n            })\n            setFilterParam(filterParam => [...filterParam, \"cat_\"+e.target.value]);\n        } else {\n            Category.forEach(async (item,index)=> {\n                if(item.id == id){\n                    Category[index]['checked'] = false\n                }\n            })\n            setFilterParam(filterParam.filter(item => item !== \"cat_\"+e.target.value));\n        }\n        setCategory(Category);\n        \n        if(filterParam.length > 0){\n            loadProduct(filterParam);\n        }\n        \n    }\n\n    const selectIngredients = (e,id) => {\n        if(e.target.checked){\n            Ingredients.forEach(async (item,index)=> {\n                if(item.id == id){\n                    Ingredients[index]['checked'] = true\n                }\n            })\n\n            setFilterParam(filterParam => [...filterParam, \"indi_\"+e.target.value]);\n        } else {\n            Ingredients.forEach(async (item,index)=> {\n                if(item.id == id){\n                    Ingredients[index]['checked'] = false\n                }\n            })\n            setFilterParam(filterParam.filter(item => item !== \"indi_\"+e.target.value));\n        }\n        setIngredients(Ingredients);\n    }\n\n    const removeFilter = (value) =>{\n\n        Category.forEach(async (item,index)=> {\n            if(\"cat_\"+item.title == value){\n                Category[index]['checked'] = false\n            }\n        })\n        setCategory(Category);\n\n        Ingredients.forEach(async (item,index)=> {\n            if(\"indi_\"+item.title == value){\n                Ingredients[index]['checked'] = false\n            }\n        })\n        setIngredients(Ingredients);\n        setFilterParam(filterParam.filter(item => item !== value));\n    }\n\n    return(<div>\n            <div className=\"wrapper\">\n                <div className=\"d-md-flex align-items-md-center\">\n                    <div className=\"h3\">Product List</div>\n                    <div className=\"ml-auto d-flex align-items-center views\"> \n                        {/* <span className=\"btn text-success\"> \n                            <span className=\"fas fa-th px-md-2 px-1\"></span>\n                            <span>Grid view</span> \n                        </span> \n                        <span className=\"btn\"> \n                            <span className=\"fas fa-list-ul\"></span>\n                            <span className=\"px-md-2 px-1\">List view</span>\n                        </span>  */}\n                        <span className=\"green-label px-md-2 px-1\">{Product.length}</span> \n                        <span className=\"text-muted\">Products</span> \n                    </div>\n                </div>\n                \n                <div className=\"d-lg-flex align-items-lg-center pt-2\">\n                    <div className=\"text-muted filter-label\">Sort:</div>\n                    <div className=\"form-inline d-flex align-items-center my-2 mr-lg-2 radio bg-light border\">  \n                        <label className=\"options\">A to Z \n                            <input type=\"radio\" name=\"productSort\" value=\"sort_atoz\"/> \n                            <span className=\"checkmark\"></span> \n                        </label> \n                        <label className=\"options\">Z to A \n                            <input type=\"radio\" name=\"productSort\" value=\"sort_ztoa\"/> \n                            <span className=\"checkmark\"></span> \n                        </label>     \n                        <label className=\"options\">Most Popular \n                            <input type=\"radio\" name=\"productSort\" value=\"sort_popular\"/> \n                            <span className=\"checkmark\"></span> \n                        </label> \n                        <label className=\"options\">Cheapest \n                            <input type=\"radio\" name=\"productSort\" value=\"sort_cheap\"/> \n                            <span className=\"checkmark\"></span> \n                        </label> \n                    </div>\n                    \n                    {/* <div className=\"form-inline d-flex align-items-center my-2 checkbox bg-light border mx-lg-2\"> \n                        <select name=\"product_sort\" id=\"country\" className=\"bg-light\">\n                            <option value=\"\" hidden>Sort</option>\n                            <option value=\"India\">A to Z</option>\n                            <option value=\"USA\">Z to A</option>\n                        </select> \n                    </div> */}\n                </div>\n                <div className=\"d-sm-flex align-items-sm-center pt-2 clear\">\n                    <div className=\"text-muted filter-label\">Applied Filters:</div>\n                    {\n                        filterParam.map((filterVal,index) => (\n                            <div className=\"green-label font-weight-bold p-0 px-1 mx-sm-1 mx-0 my-sm-0 my-2\">{filterVal.replace(/cat_|indi_/, \"\")}\n                                <span className=\" px-1 close\" onClick={(e) => removeFilter(filterVal)}>&times;</span> \n                            </div>\n                        ))\n                    }\n                    \n                    {/* <div className=\"green-label font-weight-bold p-0 px-1 mx-sm-1 mx-0\">Selected Filtre         \n                        <span className=\" px-1 close\">&times;</span> \n                    </div> */}\n                </div>\n                <div className=\"filters\"> <button className=\"btn btn-success\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-filter\" aria-expanded=\"true\" aria-controls=\"mobile-filter\">Filter<span className=\"px-1 fas fa-filter\"></span></button> </div>\n                <div className=\"content py-md-0 py-3\">\n                    <section id=\"sidebar\">\n                        <div className=\"py-3\">\n                            <h5 className=\"font-weight-bold\">Categories</h5>\n                            <form className=\"brand\">\n                                {\n                                    Category.map((catItem,index) =>(\n                                        \n                                        <div className=\"form-inline d-flex align-items-center py-1\"> \n                                            <label className=\"tick\">{catItem.title} <span className=\"badge badge-primary badge-pill\">{catItem.productCount}</span> <input type=\"checkbox\" value={catItem.title} className=\"categoryitem\" onChange={(e) => selectCategory(e,catItem.id)} checked={catItem.checked}/> <span className=\"check\"></span></label>\n                                        </div>\n                                    ))\n                                }\n                            </form>\n                        </div>\n                        <div className=\"py-3\">\n                            <h5 className=\"font-weight-bold\">Ingredients</h5>\n                            <form className=\"brand\">\n                                {\n                                    Ingredients.map((indiItem,index) => (\n                                        <div className=\"form-inline d-flex align-items-center py-1\"> <label className=\"tick\">{indiItem.title} <input type=\"checkbox\" value={indiItem.title} onChange={(e) => selectIngredients(e,indiItem.id)} checked={indiItem.checked}/> <span className=\"check\"></span> </label> </div>\n                                    ))\n                                }\n                            </form>\n                        </div>\n                    </section>\n                    <section id=\"products\">\n                        <div className=\"container py-3\">\n                            <div className=\"row\">\n                                {\n                                    Product.map((prodItem,index) => (\n                                        <div className=\"col-lg-4 col-md-6 col-sm-10 offset-md-0 offset-sm-1 mb-4\">\n                                            <div className=\"card\"> \n                                                <img className=\"card-img-top\" src={process.env.PUBLIC_URL + 'Assets/'+prodItem.image}></img>\n                                                <div className=\"card-body\">\n                                                    <h6 className=\"font-weight-bold pt-1\">{prodItem.title}</h6>\n                                                    <div className=\"text-muted description\">{prodItem.description}</div>\n                                                    {/* <div className=\"d-flex align-items-center product\"> \n                                                        <span className=\"fas fa-star\"></span> <span className=\"fas fa-star\"></span> <span className=\"fas fa-star\"></span> <span className=\"fas fa-star\"></span> <span className=\"far fa-star\"></span> \n                                                    </div> */}\n                                                    <div className=\"d-flex align-items-center justify-content-between pt-3\">\n                                                        <div className=\"d-flex flex-column\">\n                                                            <div className=\"h6 font-weight-bold\">{prodItem.discounted_price} USD</div>\n                                                            <div className=\"text-muted rebate\">{prodItem.price}</div>\n                                                        </div>\n                                                        <div className=\"btn btn-primary\">Buy now</div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                \n                                    ))\n                                }\n                            </div>\n                        </div>\n                    </section>\n                </div>\n            </div>\n        </div>\n    );\n}\nexport default Product;","/var/www/html/react/reactuser/src/Routes/PrivateRoute.js",[],"/var/www/html/react/reactuser/src/Layouts/Pagination.js",["141","142","143","144","145","146","147","148","149","150","151","152"],"import { React,useEffect,useState } from \"react\";\n\nconst Pagination = (data) => {\n\n    const { pageLimit,totalPost,navigatePage} = data;\n    const [counter,setCounter] = useState(1)\n    console.log('val===='+totalPost);\n    const [totalPageBtn,setTotalPageBtn] = useState(Math.ceil(totalPost/pageLimit))\n    const [showPreviousBtn,setShowPreviousBtn] = useState(true)\n    const [showNextBtn,setShowNextBtn] = useState(false)\n\n    const managePaging = (button) => {\n        if(button === \"prev\"){\n            if(counter == 1){\n                setCounter(1);\n                setShowPreviousBtn(true);\n            } else {\n                \n                if(counter == 2){\n                    setShowPreviousBtn(true);\n                } else {\n                    setShowPreviousBtn(false);\n                }\n                setCounter(counter - 1);\n            }\n            setShowNextBtn(false);\n\n\n        }else if(button === \"next\") {\n            if(counter == totalPageBtn){\n                setCounter(counter);\n                setShowNextBtn(true);\n            } else {\n                if(counter == totalPageBtn - 1){\n                    setShowNextBtn(true);\n                } else {\n                    setShowNextBtn(false);\n                }\n                setCounter(counter + 1);\n            }\n            setShowPreviousBtn(false);\n\n        }\n        \n    }\n    useEffect(() => {\n        const result = counter*pageLimit;\n        navigatePage((parseInt(result) - parseInt(pageLimit)),result);\n        console.log(\"valueeee====\"+totalPost);\n    },[counter])\n\n    return (\n\n        <div className=\"d-flex justify-content-center\">\n            <nav aria-label=\"Page navigation example\">\n                <ul class=\"pagination\">\n                    <li class=\"page-item\"><a class=\"page-link\" onClick={e => { managePaging(\"prev\")}}>Previous</a></li>\n                    {\n                        new Array(totalPageBtn).fill(\"\").map((pageBtn,index) => (\n                            <li class={`page-item  ${index == counter-1 ? \"active\" : \"\" }`}><a class=\"page-link\" onClick={(e) => setCounter(index+1)}>{index+1}</a></li>\n                        ))\n                    }\n                    <li class=\"page-item\"><a class=\"page-link\" onClick={e => { managePaging(\"next\")}}>Next</a></li>\n                </ul>\n            </nav>\n        </div>\n    // <div className=\"d-flex justify-content-between\">\n    //     <nav aria-label=\"Page navigation example\">\n    //         <ul class=\"pagination\">\n    //             {/* <button className=\"btn btn-primary previous-btn {showPreviousBtn == true  ? 'hidden' : ''\"  onClick={e => { managePaging(\"prev\")}}>Previous</button> */}\n    //             <button className=\"btn btn-primary previous-btn\"  disabled={showPreviousBtn} onClick={e => { managePaging(\"prev\")}}>Previous</button>\n    //             {/* <button className=\"btn btn-primary previous-btn\"  onClick={e => { managePaging(\"prev\")}}>Previous</button> */}\n    //             <button className=\"btn btn-primary next-btn\" disabled={showNextBtn} onClick={e => { managePaging(\"next\")}}>Next</button>\n    //         </ul>\n    //     </nav>\n    // </div>\n    )\n}\n\nexport default Pagination;",{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":1,"column":17,"nodeType":"159","messageId":"160","endLine":1,"endColumn":25},{"ruleId":"157","severity":1,"message":"161","line":8,"column":8,"nodeType":"159","messageId":"160","endLine":8,"endColumn":14},{"ruleId":"157","severity":1,"message":"162","line":25,"column":9,"nodeType":"159","messageId":"160","endLine":25,"endColumn":14},{"ruleId":"157","severity":1,"message":"163","line":2,"column":10,"nodeType":"159","messageId":"160","endLine":2,"endColumn":14},{"ruleId":"157","severity":1,"message":"164","line":7,"column":17,"nodeType":"159","messageId":"160","endLine":7,"endColumn":25},{"ruleId":"165","severity":1,"message":"166","line":55,"column":11,"nodeType":"167","endLine":55,"endColumn":48},{"ruleId":"157","severity":1,"message":"168","line":6,"column":22,"nodeType":"159","messageId":"160","endLine":6,"endColumn":34},{"ruleId":"157","severity":1,"message":"169","line":19,"column":18,"nodeType":"159","messageId":"160","endLine":19,"endColumn":25},{"ruleId":"157","severity":1,"message":"170","line":1,"column":16,"nodeType":"159","messageId":"160","endLine":1,"endColumn":25},{"ruleId":"157","severity":1,"message":"163","line":2,"column":21,"nodeType":"159","messageId":"160","endLine":2,"endColumn":25},{"ruleId":"157","severity":1,"message":"171","line":24,"column":31,"nodeType":"159","messageId":"160","endLine":24,"endColumn":38},{"ruleId":"157","severity":1,"message":"172","line":32,"column":16,"nodeType":"159","messageId":"160","endLine":32,"endColumn":22},{"ruleId":"173","severity":1,"message":"174","line":88,"column":73,"nodeType":"175","messageId":"176","endLine":88,"endColumn":74,"suggestions":"177"},{"ruleId":"173","severity":1,"message":"174","line":88,"column":98,"nodeType":"175","messageId":"176","endLine":88,"endColumn":99,"suggestions":"178"},{"ruleId":"173","severity":1,"message":"174","line":88,"column":107,"nodeType":"175","messageId":"176","endLine":88,"endColumn":108,"suggestions":"179"},{"ruleId":"173","severity":1,"message":"174","line":88,"column":111,"nodeType":"175","messageId":"176","endLine":88,"endColumn":112,"suggestions":"180"},{"ruleId":"181","severity":1,"message":"182","line":14,"column":7,"nodeType":"183","endLine":14,"endColumn":9,"suggestions":"184"},{"ruleId":"185","severity":1,"message":"186","line":30,"column":19,"nodeType":"187","messageId":"188","endLine":30,"endColumn":21},{"ruleId":"157","severity":1,"message":"189","line":55,"column":15,"nodeType":"159","messageId":"160","endLine":55,"endColumn":21},{"ruleId":"157","severity":1,"message":"168","line":60,"column":22,"nodeType":"159","messageId":"160","endLine":60,"endColumn":34},{"ruleId":"181","severity":1,"message":"190","line":19,"column":7,"nodeType":"183","endLine":19,"endColumn":9,"suggestions":"191"},{"ruleId":"157","severity":1,"message":"172","line":33,"column":15,"nodeType":"159","messageId":"160","endLine":33,"endColumn":21},{"ruleId":"157","severity":1,"message":"172","line":24,"column":15,"nodeType":"159","messageId":"160","endLine":24,"endColumn":21},{"ruleId":"181","severity":1,"message":"190","line":18,"column":7,"nodeType":"183","endLine":18,"endColumn":9,"suggestions":"192"},{"ruleId":"157","severity":1,"message":"193","line":17,"column":18,"nodeType":"159","messageId":"160","endLine":17,"endColumn":25},{"ruleId":"157","severity":1,"message":"194","line":21,"column":11,"nodeType":"159","messageId":"160","endLine":21,"endColumn":18},{"ruleId":"157","severity":1,"message":"195","line":37,"column":15,"nodeType":"159","messageId":"160","endLine":37,"endColumn":32},{"ruleId":"173","severity":1,"message":"174","line":76,"column":58,"nodeType":"175","messageId":"176","endLine":76,"endColumn":59,"suggestions":"196"},{"ruleId":"173","severity":1,"message":"174","line":76,"column":83,"nodeType":"175","messageId":"176","endLine":76,"endColumn":84,"suggestions":"197"},{"ruleId":"173","severity":1,"message":"174","line":76,"column":92,"nodeType":"175","messageId":"176","endLine":76,"endColumn":93,"suggestions":"198"},{"ruleId":"173","severity":1,"message":"174","line":76,"column":96,"nodeType":"175","messageId":"176","endLine":76,"endColumn":97,"suggestions":"199"},{"ruleId":"157","severity":1,"message":"200","line":10,"column":36,"nodeType":"159","messageId":"160","endLine":10,"endColumn":45},{"ruleId":"181","severity":1,"message":"201","line":16,"column":15,"nodeType":"202","endLine":19,"endColumn":6},{"ruleId":"173","severity":1,"message":"174","line":59,"column":69,"nodeType":"175","messageId":"176","endLine":59,"endColumn":70,"suggestions":"203"},{"ruleId":"173","severity":1,"message":"174","line":59,"column":94,"nodeType":"175","messageId":"176","endLine":59,"endColumn":95,"suggestions":"204"},{"ruleId":"173","severity":1,"message":"174","line":59,"column":103,"nodeType":"175","messageId":"176","endLine":59,"endColumn":104,"suggestions":"205"},{"ruleId":"173","severity":1,"message":"174","line":59,"column":107,"nodeType":"175","messageId":"176","endLine":59,"endColumn":108,"suggestions":"206"},{"ruleId":"157","severity":1,"message":"207","line":101,"column":12,"nodeType":"159","messageId":"160","endLine":101,"endColumn":18},{"ruleId":"157","severity":1,"message":"208","line":157,"column":15,"nodeType":"159","messageId":"160","endLine":157,"endColumn":23},{"ruleId":"173","severity":1,"message":"174","line":218,"column":61,"nodeType":"175","messageId":"176","endLine":218,"endColumn":62,"suggestions":"209"},{"ruleId":"173","severity":1,"message":"174","line":218,"column":86,"nodeType":"175","messageId":"176","endLine":218,"endColumn":87,"suggestions":"210"},{"ruleId":"173","severity":1,"message":"174","line":218,"column":95,"nodeType":"175","messageId":"176","endLine":218,"endColumn":96,"suggestions":"211"},{"ruleId":"173","severity":1,"message":"174","line":218,"column":99,"nodeType":"175","messageId":"176","endLine":218,"endColumn":100,"suggestions":"212"},{"ruleId":"165","severity":1,"message":"166","line":251,"column":38,"nodeType":"167","endLine":251,"endColumn":50},{"ruleId":"165","severity":1,"message":"166","line":251,"column":73,"nodeType":"167","endLine":251,"endColumn":85},{"ruleId":"181","severity":1,"message":"213","line":15,"column":7,"nodeType":"183","endLine":15,"endColumn":9,"suggestions":"214"},{"ruleId":"185","severity":1,"message":"186","line":73,"column":28,"nodeType":"187","messageId":"188","endLine":73,"endColumn":30},{"ruleId":"185","severity":1,"message":"186","line":80,"column":28,"nodeType":"187","messageId":"188","endLine":80,"endColumn":30},{"ruleId":"185","severity":1,"message":"186","line":97,"column":28,"nodeType":"187","messageId":"188","endLine":97,"endColumn":30},{"ruleId":"185","severity":1,"message":"186","line":105,"column":28,"nodeType":"187","messageId":"188","endLine":105,"endColumn":30},{"ruleId":"185","severity":1,"message":"186","line":117,"column":34,"nodeType":"187","messageId":"188","endLine":117,"endColumn":36},{"ruleId":"185","severity":1,"message":"186","line":124,"column":35,"nodeType":"187","messageId":"188","endLine":124,"endColumn":37},{"ruleId":"215","severity":1,"message":"216","line":227,"column":49,"nodeType":"167","endLine":227,"endColumn":135},{"ruleId":"157","severity":1,"message":"217","line":8,"column":25,"nodeType":"159","messageId":"160","endLine":8,"endColumn":40},{"ruleId":"157","severity":1,"message":"218","line":9,"column":12,"nodeType":"159","messageId":"160","endLine":9,"endColumn":27},{"ruleId":"157","severity":1,"message":"219","line":10,"column":12,"nodeType":"159","messageId":"160","endLine":10,"endColumn":23},{"ruleId":"185","severity":1,"message":"186","line":14,"column":24,"nodeType":"187","messageId":"188","endLine":14,"endColumn":26},{"ruleId":"185","severity":1,"message":"186","line":19,"column":28,"nodeType":"187","messageId":"188","endLine":19,"endColumn":30},{"ruleId":"185","severity":1,"message":"186","line":30,"column":24,"nodeType":"187","messageId":"188","endLine":30,"endColumn":26},{"ruleId":"185","severity":1,"message":"186","line":34,"column":28,"nodeType":"187","messageId":"188","endLine":34,"endColumn":30},{"ruleId":"181","severity":1,"message":"220","line":50,"column":7,"nodeType":"183","endLine":50,"endColumn":16,"suggestions":"221"},{"ruleId":"165","severity":1,"message":"222","line":57,"column":43,"nodeType":"167","endLine":57,"endColumn":103},{"ruleId":"185","severity":1,"message":"186","line":60,"column":60,"nodeType":"187","messageId":"188","endLine":60,"endColumn":62},{"ruleId":"165","severity":1,"message":"222","line":60,"column":93,"nodeType":"167","endLine":60,"endColumn":151},{"ruleId":"165","severity":1,"message":"222","line":63,"column":43,"nodeType":"167","endLine":63,"endColumn":103},"no-native-reassign",["223"],"no-negated-in-lhs",["224"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Navbar' is defined but never used.","'token' is assigned a value but never used.","'Link' is defined but never used.","'setToken' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'setPageLimit' is assigned a value but never used.","'setPost' is assigned a value but never used.","'useEffect' is defined but never used.","'message' is assigned a value but never used.","'result' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\\".","Literal","unnecessaryEscape",["225","226"],["227","228"],["229","230"],["231","232"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadUsers'. Either include it or remove the dependency array.","ArrayExpression",["233"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'action' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadUserData'. Either include it or remove the dependency array.",["234"],["235"],"'setUser' is assigned a value but never used.","'history' is assigned a value but never used.","'getRegisteredData' is assigned a value but never used.",["236","237"],["238","239"],["240","241"],["242","243"],"'getValues' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression",["244","245"],["246","247"],["248","249"],["250","251"],"'signup' is assigned a value but never used.","'response' is assigned a value but never used.",["252","253"],["254","255"],["256","257"],["258","259"],"React Hook useEffect has missing dependencies: 'loadCategory' and 'loadIngredients'. Either include them or remove the dependency array.",["260"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'setTotalPageBtn' is assigned a value but never used.","'showPreviousBtn' is assigned a value but never used.","'showNextBtn' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'navigatePage', 'pageLimit', and 'totalPost'. Either include them or remove the dependency array.",["261"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"messageId":"262","fix":"263","desc":"264"},{"messageId":"265","fix":"266","desc":"267"},{"messageId":"262","fix":"268","desc":"264"},{"messageId":"265","fix":"269","desc":"267"},{"messageId":"262","fix":"270","desc":"264"},{"messageId":"265","fix":"271","desc":"267"},{"messageId":"262","fix":"272","desc":"264"},{"messageId":"265","fix":"273","desc":"267"},{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"276","fix":"278"},{"messageId":"262","fix":"279","desc":"264"},{"messageId":"265","fix":"280","desc":"267"},{"messageId":"262","fix":"281","desc":"264"},{"messageId":"265","fix":"282","desc":"267"},{"messageId":"262","fix":"283","desc":"264"},{"messageId":"265","fix":"284","desc":"267"},{"messageId":"262","fix":"285","desc":"264"},{"messageId":"265","fix":"286","desc":"267"},{"messageId":"262","fix":"287","desc":"264"},{"messageId":"265","fix":"288","desc":"267"},{"messageId":"262","fix":"289","desc":"264"},{"messageId":"265","fix":"290","desc":"267"},{"messageId":"262","fix":"291","desc":"264"},{"messageId":"265","fix":"292","desc":"267"},{"messageId":"262","fix":"293","desc":"264"},{"messageId":"265","fix":"294","desc":"267"},{"messageId":"262","fix":"295","desc":"264"},{"messageId":"265","fix":"296","desc":"267"},{"messageId":"262","fix":"297","desc":"264"},{"messageId":"265","fix":"298","desc":"267"},{"messageId":"262","fix":"299","desc":"264"},{"messageId":"265","fix":"300","desc":"267"},{"messageId":"262","fix":"301","desc":"264"},{"messageId":"265","fix":"302","desc":"267"},{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},"removeEscape",{"range":"307","text":"308"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"309","text":"310"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"311","text":"308"},{"range":"312","text":"310"},{"range":"313","text":"308"},{"range":"314","text":"310"},{"range":"315","text":"308"},{"range":"316","text":"310"},"Update the dependencies array to be: [loadUsers]",{"range":"317","text":"318"},"Update the dependencies array to be: [loadUserData]",{"range":"319","text":"320"},{"range":"321","text":"320"},{"range":"322","text":"308"},{"range":"323","text":"310"},{"range":"324","text":"308"},{"range":"325","text":"310"},{"range":"326","text":"308"},{"range":"327","text":"310"},{"range":"328","text":"308"},{"range":"329","text":"310"},{"range":"330","text":"308"},{"range":"331","text":"310"},{"range":"332","text":"308"},{"range":"333","text":"310"},{"range":"334","text":"308"},{"range":"335","text":"310"},{"range":"336","text":"308"},{"range":"337","text":"310"},{"range":"338","text":"308"},{"range":"339","text":"310"},{"range":"340","text":"308"},{"range":"341","text":"310"},{"range":"342","text":"308"},{"range":"343","text":"310"},{"range":"344","text":"308"},{"range":"345","text":"310"},"Update the dependencies array to be: [loadCategory, loadIngredients]",{"range":"346","text":"347"},"Update the dependencies array to be: [counter, navigatePage, pageLimit, totalPost]",{"range":"348","text":"349"},[3959,3960],"",[3959,3959],"\\",[3984,3985],[3984,3984],[3993,3994],[3993,3993],[3997,3998],[3997,3997],[389,391],"[loadUsers]",[456,458],"[loadUserData]",[409,411],[2924,2925],[2924,2924],[2949,2950],[2949,2949],[2958,2959],[2958,2958],[2962,2963],[2962,2962],[3739,3740],[3739,3739],[3764,3765],[3764,3764],[3773,3774],[3773,3773],[3777,3778],[3777,3777],[11282,11283],[11282,11282],[11307,11308],[11307,11307],[11316,11317],[11316,11316],[11320,11321],[11320,11320],[415,417],"[loadCategory, loadIngredients]",[1559,1568],"[counter, navigatePage, pageLimit, totalPost]"]